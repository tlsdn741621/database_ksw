-- 정규화 
-- 이상현상(삽입/갱신/삭제 이상)
-- 제1정규형(1NF), 제2정규형(2NF), 제3정규형(3NF)의 개념
-- 예시 
-- 퀴즈 

-- 이상현상(삽입/갱신/삭제 이상)
-- 1. 삽입 이상. (insertion Anomaly)
-- 일부 정보를 추가하려는데 다른 정보가 없어 입력이 불가능한 문제 

-- 예시) 주문/고객/상품 컬럼이 한 테이블에 존재 
-- | 주문번호 | 고객명 | 상품명 | 수량 |
-- | ----    | ---    | ---   | -- |
-- | O001    | 홍길동  | 키보드 | 2  |
-- | 없음    | 없음  | 모니터 | 2  | -- 다른 정보가 ,주문번호, 고객명이 없기 때문에 추가 불가.

-- 새로운 상품 '모니터'를 등록 해보기, 
-- 문제점) 아직 주문이 발생하지 않았기 때문에, 주문번호와 고객명이 없음. 
-- 상품 정보를 입력하려면 주문 정보도 같이 넣어야하는 함. 
-- 입력 불가 또는 가짜 데이터 추가 해야함. 

-- 2 갱신이상 ( Update Anomaly)
-- 데이터의 일부만 수정되어, 불일치가 생기는 문제 
-- 예시 
-- ### 🔸 예시: 고객 정보가 중복 저장된 경우

-- | 주문번호 | 고객명 | 주소        |
-- | ----    | ---   | --------- |
-- | O001    | 홍길동 | 서울 강남구    |
-- | O002    | 홍길동 | 서울 강서구 ←❌ |
-- 고객이 이사했는데 한 행만 주소를 수정하는 경우, 나머지는 수정하지 않음. 
-- 문제점, 동일한 고객 정보가 다르게 저장되어 , 불일치 발생. 

-- 3 삭제 이상 (Deletion Anomaly)
-- 하나의 데이터를 삭제하려다가 다른 필요한 정보까지 함께 삭제되는 문제 
-- 예시 
-- 상품 없이 고객을 저장하는 구조 
-- | 주문번호 | 고객명 | 상품명 |
-- | ---- | --- | --- |
-- | O001 | 홍길동 | 마우스 |
-- 주문 O001 이 취소되어, 행을 삭제하면, 
-- 고객 홍길동 정보까지 완전히 사라짐, 
-- 주문을 지우면서, 고객 정보도 함께 손실됨. 

-- 결론, 이런 이상현상은 한 테이블에 정보를 다 모아둬서, 
-- 그래서, 정규화 과정을 통해, 중복을 최소화 하고, 무결성 유지, 효율적인 데이터베이스 설계하기. 

-- 1 정규화 ( 1NF) : 
-- 모든 속성의 값이 원자값이어야한다. -> 하나의 컬럼에 값이 하나만 있어야한다.

-- 예시 
-- 문제점 제시, 1 정규화가 안된 테이블 구조, 
-- | 고객ID | 고객명 | 전화번호               |
-- | ---- | --- | ------------------ |
-- | C001 | 홍길동 | 010-1234, 010-5678 |

-- 1NF 정규화 진행하기. 
-- | 고객ID | 고객명 | 전화번호     |
-- | ---- | --- | -------- |
-- | C001 | 홍길동 | 010-1234 |
-- | C001 | 홍길동 | 010-5678 |


-- 2NF 정규화 
-- 부분 함수 종속 제거 
-- 문제점 제시,  (복합키 포함)
-- | 주문ID | 상품ID | 상품명 | 단가   |
-- | ---- | ---- | ---      | ---- |
-- | O001 | P001 | 노트북    | 150만 |
-- | O001 | P002 | 키보드    | 5만   |
-- | O002 | P001 | 노트북    | 150만 |
-- 기본키 = (주문ID, 상품 ID)
-- 상품명, 단가 는 상품ID 에만 종속 -> 부분 종속 발생

-- 2 정규화 , 하나의 테이블를 , 2개의 테이블로 분리. 
-- #### 🔹 주문 상세

-- | 주문ID | 상품ID |
-- | ---- | ---- |
-- | O001 | P001 |
-- | O001 | P002 |
-- | O002 | P001 |

-- #### 🔹 상품 테이블

-- | 상품ID | 상품명 | 단가   |
-- | ---- | --- | ---- |
-- | P001 | 노트북 | 150만 |
-- | P002 | 키보드 | 5만   |

-- 3 정규화 :
-- 이행적 종속 제거 
-- 문제점 제시, 

-- | 사번  | 이름  | 부서코드 | 부서명 | 부서위치 |
-- | --- | ---    | ----    | ---   | ---- |
-- | 101 | 김유신 | D01     | 총무부 | 3층   |
-- | 102 | 이순신 | D01      | 총무부 | 3층   |

-- 부서코드 -> 부서명, 부서위치 , 1번째 종속
-- 사번, -> 부서코드 -> 부서명 , 2번째 종속, = 이행적 종속

-- 3 정규화를 적용해보기. 2개 테이블 분리. 
-- #### 🔹 사원 테이블

-- | 사번  | 이름  | 부서코드 |
-- | --- | --- | ---- |
-- | 101 | 김유신 | D01  |
-- | 102 | 이순신 | D01  |

-- #### 🔹 부서 테이블

-- | 부서코드 | 부서명 | 부서위치 |
-- | ---- | --- | ---- |
-- | D01  | 총무부 | 3층   |

--퀴즈 
-- 제시된 문제 테이블를 , 1,2,3, 정규화를 통해서, 분리 작업 해주세요. 
-- | 학번   | 이름  | 수강과목   | 교수명      |
-- | ---- | --- | ------ | -------- |
-- | 1001 | 홍길동 | DB, 자바 | 김교수, 박교수 |

-- 1정규화, 하나의 컬럼에 하나의 값만, 원자값으로 가지기. 

-- | 학번   | 이름  | 수강과목   | 교수명      |
-- | ---- | --- | ------ | -------- |
-- | 1001 | 홍길동 | DB  | 김교수 |
-- | 1001 | 홍길동 | 자바 | 박교수 |

-- 2 정규화, 부분 함수 종속 제거, -> 
-- 학번, 이름 : 1 테이블,  학번, 수강과목 , 교수명 : 2테이블 

-- 1 테이블
-- | 학번   | 이름  |
-- | ---- | --- |
-- | 1001 | 홍길동 |

--  2테이블 
-- | 학번   | 수강과목 | 교수명 |
-- | ---- | --- | --- |
-- | 1001 | DB  | 김교수 |
-- | 1001 | 자바  | 박교수 |

-- 3정규화  이행적 종속 제거 
-- 학번 , 수강 과목 : 1테이블,  수강 과목 , 교수명 : 2테이블 

--  1 테이블
-- | 학번   | 수강과목 |
-- | 1001 | DB  |
-- | 1001 | 자바  |

-- 2 테이블 
-- | 수강과목 | 교수명 |
-- | DB  | 김교수 |
-- | 자바  | 박교수 |

-- 3 테이블
-- | 학번   | 이름  |
-- | ---- | --- |
-- | 1001 | 홍길동 |

-- 분리된 테이블(정규화가 된 테이블 ), 
-- 역으로, 각각의 테이블 조인하면, 원래의 테이블로 돌아감. 